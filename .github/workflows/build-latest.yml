# This workflow will build a golang project
# For more information see:
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: build-latest

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Prepare for static linking
        run: sudo apt-get install -y --no-install-recommends musl-dev musl-tools

      - name: Build
        run: GOAMD64=v4 CGO_ENABLED=1 CC=musl-gcc go build -v -ldflags='-w -linkmode=external -extldflags=-static' -tags osusergo,netgo ./cmd/litestream

      - name: Compress
        run: xz litestream

      - name: Write version
        run: D=$(date -u +%Y-%m-%d-%H%M); H=$(git rev-parse --short HEAD); echo "$D-$H" > version

      - name: Read version
        id: getversion
        run: echo "::set-output name=version::$(cat version)"

      - uses: ratrocket/action-automatic-releases@latest
        if: github.ref == 'refs/heads/main'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          files: "*.xz"
          automatic_release_tag: ${{ steps.getversion.outputs.version }}
          prerelease: false
